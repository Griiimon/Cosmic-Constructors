make player white head piece round, slightly elliptical

FIX equipment port player rigid to kinematic transition

sync equipment grids in multiplayer

disconnect equipment grid from high joint force/torque

change ui buttons to be toggled when active, disabled when unavailable

when stepping from grid onto terrain ( maybe only via ramp? ) player is stuck in grid movement state

when grid is removed and player is moving on it ( child ) reparent player first

when eva without jetpack and lying on the floor ( with gravity ) slowly rotate so feet make contact

leaving seat makes jetpack button appear even when no jetpack in equipment

make sure to floor() Vector3s when converting to Vector3i voxel positions

Rotor needs 6DOFJoint motor on X-axis

FuelTank doesnt have fluid connector instances anymore

TubeGroupMemberInstance @tool script add_connectors_to_model: bool not working

MergeBlock should use HingeJoint to lock

Why is the FluidConsumer a ToolScript?

Finish 6r Suspension

SubGridConnection needs to be informed of connected grid removal and be destroyed

FIX rotor joint, make test scene to find out why its so buggy

DONT allow grabbing handles ( or moving grabbed grids ) that player is standing on ( including sub grids / parent grids )

FIX build outboard engine from below not working
	debug display while building with 

FIX (active) joints seemingly having issues with LODActivation?
	or is this only the new rotor with closer head
	
make hinge head closer to base.  piston, slider too?

add cone motor block with JoltConeTwistJoint?

PlayerEntitySettings.can_swim to activate WaterVoxelDetectors ( and swim movement state )

FIX VoxelViewer blocky full update when reparent

VoxelTerrainRaycast a bit buggy

FIX try_to_separate_grid() grid_voxels can contain air block

player RB while jumping can start to rotate if hits something

add turn_into_blocks to block library at runtime



ItemEjectorComponent needs to be serialized, now that it has a queue

Blower hand item ( pushes light blocks / world items )

command seat: send "signals" that can be picked up by any block in grid/subgrid. add rotor signal "signal_name": turn_right

build category menu can still get messed up and clicks drop blocks instead of select category
	=> Player node sometimes randomly get pushed down in tree



proper chunk activation should take grids AABB into account and only unfreeze it if all chunks inside that AABB report generated

add chunk activation to custom lod generators

test blocky terrain multiplayer

WARNING Jolt 6DOFJoints don't use FixedConstraint
WARNING VoxelLodTerrain has no multiplayer??

no explosion effect from cannonball, but explosion force works??
	deduce explosion effect from Damage type: higher scale for more damage, higher particle count for higher radius

how does tank syncing between client and single player work??

Faction popup BEFORE player spawns in multiplayer, if world is new or not member of a faction

deduce explosion effect size from Damage type: higher scale for more damage, higher particle count for higher radius

apply impulse to player from explosion in multiplayer


make WorldItemInstance inherit ObjectEntity, sync_on_connect() [ not all Objects need to be synced on connect, temporary ones like fluid drops or cannonballs that disappear after a few seconds.. ]

fog shader ( clouds plugin / zylann? ) weird camera angle dependent ( first / third switch to demonstrate ) fog

player somehow last child again ( starting through launcher? )

basic noise terrain creator with tool script, terrain generator resource, grass/rock shader with normal

network sync plane_fill ( special case? dont just sync spawning each block)

suspension props
	power
	brakes
	spring

more dampening on suspension

property panel group system:
	create group
	add to last group
	group mode toggle: every thing pressed will affect the entire group, including hotkey assignment


implement blueprinting from inside seat

test merge blocks in network

implement sync var client interpolation

FIX non-force-offset thrusters should apply force not at center but calculated CoM

FIX on_grid_changed() [ REPARENT JOINT? ] in piston ( hinge, rotor, [rail?] ) recalculate limits and initial offset when changing joint node?
thrusters particle TARGET direction seems to be in global coords


sync fluid drops

implement grid inertial dampeners sync

solid fuel thruster dynamic weight

serialize hose coupling connections

restored WorldItemInstances need LodActivation

subgrids: unregister and cleanup when sub grid gets deleted

BlockInstances that spawn sub grids should override on_removed() to disconnect them

player respawn ( via console )


sync drive shaft rotation

sync tube group lights

drive shaft doesnt turn with no active torque

dynamic desync check ( triggered by console ): hash all grid ids + blocks dict and compare to server

test peer disconnection from server. may not need any handling

serialize ore pile + ore container

sync WorldItemInstances ( only when not frozen/sleeping )


guard against recursive sub grid blueprint while until implemented

when serializing blueprints dont serialize content of blocks like ore container, gas tank..

save/load ObjectEntity ( Pallet etc )
 
client not allowed to enter occupied seat

What happens with particles when a player joins while the thruster is already active

sitting on other client needs to reparent the peer like the server. what happens if a client joins with another client already sitting 


grid impact damage

why is player able to push grids in multiplayer while walking, but not in singleplayer?
	because on server he is never frozen
	=> add push script for singleplayer
	
add debug console

make MyTerrain a component so it doesnt need to inherit LODTerrain
	and FIX Drilling behavior on simple staticbody terrain
	
block splitting new grid ids need to be synced ( still ? ) => build a list of all split grids, this list has the same grid pointers in same order. so the server can send an approriate update using the list indices and the previous grid id of the original grid ]

implement MergeBlock re-locking


recursive sub grid blueprints ( deeper then one level )

Components can_* functions just use Callable refs like with FluidConsumer

persistent PlayerData ( like hotbars ) outside of Player ( entity ) class

tree spawner

wooden workbench


FIX handles hard to grab when facing slightly down
	=> interact raycast could check if there's anything to interact with and if not run an additional 0.5 - 1m sphere check for interactables


plane fill v2: flood fill plane without placing blocks ( set a max cap ) and only if contained plane is found spawn blocks

when the car isnt moving ( for a bit? ) put an additional damping factor on the suspension

terrain height map array store and calc normals:
Chunks of height info are created independent of the terrain generator, but terrain generator ( can look if height map for current chunk has been created - HOW TO MATCH WEIRD 19x19 voxel chunks) queries height from that cache which will either return a cached value or call get_height() if cache doesn't exist yet

Ore Intake: Ore Funnel, takes ore from above one-by-one and ejects below to valid target 

Fluid Consumer: make sure correct fluid is supplied


items: add mass ( and even dynamic damping? )

serializable inventories

throw items: drop with f or when mouse released, but add force on mouse hold duration

higher default damping on suspension, hard code?

when splitting
	prioritize: with more functional blocks, with more blocks
	trigger on_grid_changed()
	reconnect signals from BlockInstances


paraglider control with "strapped-in seat": can apply minimal torque to the grid, but no hotbar. only deliver maximum torque if seat is a CoM?

sucker block: sucks world items up and keeps them sucked while active. use shapecasts to avoid sucking another one while there is one sucked in 

propeller/fans: like low force thrusters ( with built-in rotation capabilities? )

can i rotate a subgrid on a rotor by pulling on handles?
	lock mode for rotor: motor 0 velocity means locked or free

use calc_angular_velocity() in periperal connector code

only add ore to pile if it can take all of it ( or consume and spit out the overflow as new item )

in addition to BlockPlacementCondition also have BlockDockConditions for neighbors to override placement

adaptive physics ticks per second ( needs to be multiple of 60 and on server only to properly sync with client? ) 


player variable jump height ( hold and release )

boulders with scattered stones for first tools
	trees with sticks..

helicopter

fixed rope for carrying objects with heli etc
	use rope visual but 6dof joint


split tube groups check if more 1 neighbor when removing and then have the group flood fill for all neighbors, removing any queued neighbor when found within flood fill

grayer color for extra properties in property viewer

check if recent atmospheric shader change has any negative effects in Forward+



plane wings: 
	lift surface block
	wing tip block ( improves angular damping in this direction )
	flaps block

run damage test with multi blocks in grid


save PeripheralGridEntities ( + connections )

PanelViewer edit mode: unique, all (same type), mirrored ( which axis? axis aren't even consistent ) => choose&connect mirror block

"thick" wireframe shader for unfinished blocks?

add motion blur ( sphynx addon? ) to fluid drops
 or just make them a little transparent and each drop has a trail of 5 - 10 drop meshes that will be destroyed at the same position where the original drop was destroyed

air ship

add custom lower, upper limit and torque to joint blocks

spring

add non solid, frozen rigidbody to player as gravity gauge?

build actual in-game wind-tunnel with ingame colored wind particles blower block
	grids save aero wind direction for all empty surrounding blocks (or wind deflection angle for used ones vs from each cardinal direction )

braking unsettles suspension too much ( even at low speeds ), maybe its accurate with low damping?

upside down wheels should skip any calculations ( shapecast normal != wheel basis down )

implement rolling resistance

avoid overlap with other grid while building

player carry ore chunks, add collision shape but keep center of mass

BlockInventory component
drill stops drilling when full

fixed gatling

debug hitpoint bars for each block


BlockPlacementsConditions? => pistons, rotor cant have anything above

BlockInstance on_update() for rotor/piston !?

"F" (hold) click block 
	holding F will trigger UI overlay displaying target blocks default action

build ghost: just make all materials white, no transparency and remove any texture 
	( half transparent shader + texture only solution )


grid angular dampeners

save player only in cryo pod, otherwise use default spawn points or medbay

FIX landing walking on grid triggers left_ground continuously!?
FIX getting stuck in terrain when going EVA ( will intersect_shape work against terrain? because Area didnt seem to => JOLT OPT-IN )
FIX removing MultiBlocks can lead to crash ( only when splitting grids? )
FIX when player stands on Grid that gets split at any pos he sometimes gets thrown off
FIX thruster particles are off when rotated=> cant reproduce ( double precision issue?? )
FIX ghost sometimes getting left behind on moving grid
FIX bottom out wheel reverse speed hack => dont show wheel rotation
FIX jetpack counterforce against gravity
FIX static grids connected to terrain jitter ( only when terrain gets edited, lod changes? ) 
FIX grabbing handles on same grid player is standing on should have no effect. ALSO if grid is connected to grid players standing on
FIX grabbing handles weight calculation for all connected grids => make grabbing joint-based
FIX suspension jitter with joints
FIX build block placement after placing custom shape
FIX hinge snaps back to ang 0 when deactivated => because of grid deletions/splitting?
FIX align block with terrain ( gravity up vector )

INVESTIGATE possible to pick up item from floor and from OreContainer with one F push in the same frame. almost seemed so


IS FIXED?
	FIX sometimes wrong ( downwards ) momentum when strafing off grid 
	FIX ghost overlays custom shape blocks
	FIX empty grids cause save game corruption?
	FIX block splitting still wonky in multiplayer?
	FIX world.json sometimes get corrupted ( due to multiple saves? ) 




REFACTOR
-------------

all signal and callback functions should start with on_*
check early BlockInstances make sure block_ utility functions like to_global() are used



MULTIPLAYER
---------------

walk speed sync


DESIGN QUESTIONS
-----------------

what about block grids inertia, automatically re-calculated when center of mass or mass changes?

shouldnt all block models face -z? piston and rotor face up

re-center origin of split grids ( to its center of mass )?? needs to snap to Vector3i block pos and update all relative positions

make vehicle wheels rigidbodies with no friction, still use all the calculations but use slider joint for max suspension travel

is there suspension resistance in up direction? if car gets weighed down in the rear shouldnt the front suspension move up?

build mode for periperal entities: auto-snap to empty peripheral connectors?

handle object grabbing with joint and motor instead of velocity and torque?

use joint for item pickup: linear and angular spring to try and center it. drop if it gets yanked too far away. advantage: automatic collision shape extension for RB and CB player, mass + CoM for RB 


SCENARIOS
----------------

Mini Factory and logistics:
	drill [coal and] iron
	transport with wheelbarrow to factory
	build elevator to bring wheelbarrow up to furnace intake
	unload into furnace
	conveyor iron ingots to wooden pallet
	electric 3r suspension forklift pallet onto truck
	[use refinery to turn coal into oil]
	[and fuel refinery to turn oil into fuel]
	[fill truck gas tank with fuel canister]
	then drive to fueling station

	load ore truck at drilling station


Survival Start:
	collect stick and rock, craft axe
	fell tree
	produce wooden pallet at workbench


Minecraft Game Mode:
	Blocky terrain
	Build House, put Roof on hinge
	open House top and launch space rocket 

	make trees frozen grids with non-overlapping base block anchor
	build felling vehicle with saw
	saw off base block
	use sucker block to lift unfrozen tree
	put tree in trunk with saws
	sawed blocks will drop logs
	logs are collected with hoppers and place in chest


Car jump:
	jump from ramp onto platform ( flood fill build mode )
	distance is to great for a jump
	add wings ( deploy via hinge joint right before jump )


Ore Collector:
	Ore Dump Truck 3x2 container and sucker arm
	collect ore with sucker
	dump ( rotate container ) at Ore Intake + conveyor


Racing:
	Terrain3D
	track with waypoint lap time detection
	build cars next to track and try to go for fastest lap


Survival (and PVP):
	planet or infinite terrain
	trees rocks etc
	wait for item drops ( at campfire, beacon, random )
	search loot
	enemy drones and robots


Wave Defense:
	...


Artillery / Ballerburg:
	Spawn royal chamber ( on flat terrain ), game over when destroyed, respawn point
	blocks cost money, according to base cost
	cannonball and powder storage, cannons need to be in range to resupply automatically
	store block, storages need to be in range, buy from storages not at store, fluctuating prices
	gold deposits, gold can be turned into money at mint ( like furnace but output automatically turned into coins )
	game mode: add block_category with cannon, mint etc. ui overlay ( coins )
	wind
	no jetpack
	ladders?
	auto-save
	factions ( one per player, grids take player faction )
	

NEW MECHANICS
-----------------

Laser Guns
Player Equipment grid like factorio, with shields etc
backpack vs bottles

science, progression unlocking and improving block properties
basic/intermediate/advanced/expert/master sciene levels/recipes

moving celestial bodies by putting each in its own world3d ( not possible in multiplayer currently cuz Voxel plugin will build collision for all voxel terrains at local coords? )

only allowed to build peripheral entities next to 3d printer

grids can send signals ( A, B, C ) to subgrids to facilitate control from main grid 

radar dish, can pick up near enemies where its facing ( fading hud enemy signals that stay active for 10-30 secs after last pickup )

tiny 25cm grid for drones etc ( zoom option while building? )

can carry fuel can to directly fill tanks a little bit

reward player for staying alive: current player character gets stat boosts for being alive longer ( maybe even for travelling long distances )

skid blocks for making sleds in snow biome

start in "wood age", chopping trees ( drop saplings for replanting ). wood structure block, wooden fixed wheel etc

ice will have the same friction as all terrain ( wheels can handle it but.. ) grids could change their friction dynamically depending on what terrain type they are making contact with

crop fields: tilling ( turn grass into dirt voxel ) and harvesting manually or with machines

hard stone type that cannot be mined, only tnt etc

Assemblers will not stockpile products without ability to drop product. will produce 1 tho and player can grab it

implement per axis linear damping calculated from air resistance profile
	would work for single main grid with cached per-axis profiles updated after changes done to the grid. if it werent for sub grids that can dynamically change relative position and angles too. would lead to continuous heavy calculations 

different width wheels for each radius, so a high torque axle can transfer with more friction. wheels cannot auto-spawn but have to be manually added. positive: only one suspension block for different wheels


TECHNOLOGIES:
------------------------

PlayerEquipment:
	-Remote Control


Block Properties:
	actual suspension on Wheel Suspensions
